{"ast":null,"code":"import _classCallCheck from \"/home/gamped/codeDev/nobel_iot/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gamped/codeDev/nobel_iot/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gamped/codeDev/nobel_iot/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gamped/codeDev/nobel_iot/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gamped/codeDev/nobel_iot/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gamped/codeDev/nobel_iot/frontend/src/Pages/Admin/Admin.js\";\nimport React from \"react\";\nimport { socket } from \"../../Websocket/Socket\";\nimport { updateBeamerState, updateChannelState } from \"../../Websocket/WsUpdaters\";\nimport \"../Pages.css\";\nimport \"./Admin.css\";\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.ToggleBeamer = function (e) {\n      socket.emit('toggleBeamer');\n    };\n\n    _this.ToggleChannel = function (e) {\n      socket.emit('toggleChannel');\n    };\n\n    _this.state = {\n      Title: \"Nobel IoT: Admin\",\n      BeamerState: \"Unknown\",\n      ChannelState: \"Unknown\" // Get the current state\n\n    };\n    socket.emit('getBeamerState');\n    socket.emit('getChannelState'); // Functions for updating the state\n\n    updateBeamerState(function (err, BeamerState) {\n      return _this.setState({\n        BeamerState: BeamerState\n      });\n    });\n    updateChannelState(function (err, ChannelState) {\n      return _this.setState({\n        ChannelState: ChannelState\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"PageBorder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Margin_2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Admin_TitleBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"customText_w_big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.Title)), React.createElement(\"div\", {\n        className: \"Admin_BtnBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.ToggleBeamer,\n        className: \"Admin_BTN dark_BTN customText_w\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Turn beamer \", this.state.BeamerState), React.createElement(\"button\", {\n        onClick: this.ToggleChannel,\n        className: \"Admin_BTN dark_BTN customText_w\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Change channel to \", this.state.ChannelState))));\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/home/gamped/codeDev/nobel_iot/frontend/src/Pages/Admin/Admin.js"],"names":["React","socket","updateBeamerState","updateChannelState","Admin","props","ToggleBeamer","e","emit","ToggleChannel","state","Title","BeamerState","ChannelState","err","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,QAAoD,4BAApD;AACA,OAAO,cAAP;AACA,OAAO,aAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAiBnBC,YAjBmB,GAiBJ,UAACC,CAAD,EAAO;AAClBN,MAAAA,MAAM,CAACO,IAAP,CAAY,cAAZ;AACH,KAnBkB;;AAAA,UAqBnBC,aArBmB,GAqBH,UAACF,CAAD,EAAO;AACnBN,MAAAA,MAAM,CAACO,IAAP,CAAY,eAAZ;AACH,KAvBkB;;AAEf,UAAKE,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,kBADE;AAETC,MAAAA,WAAW,EAAE,SAFJ;AAGTC,MAAAA,YAAY,EAAE,SAHL,CAMb;;AANa,KAAb;AAOAZ,IAAAA,MAAM,CAACO,IAAP,CAAY,gBAAZ;AACAP,IAAAA,MAAM,CAACO,IAAP,CAAY,iBAAZ,EAVe,CAYf;;AACAN,IAAAA,iBAAiB,CAAC,UAACY,GAAD,EAAMF,WAAN;AAAA,aAAsB,MAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAXA;AAAD,OAAd,CAAtB;AAAA,KAAD,CAAjB;AACAT,IAAAA,kBAAkB,CAAC,UAACW,GAAD,EAAMD,YAAN;AAAA,aAAuB,MAAKE,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAZA;AAAD,OAAd,CAAvB;AAAA,KAAD,CAAlB;AAde;AAelB;;;;6BAUO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKH,KAAL,CAAWC,KAA7C,CADJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKL,YAAtB;AACQ,QAAA,SAAS,EAAC,iCADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEqB,KAAKI,KAAL,CAAWE,WAFhC,CADJ,EAKI;AAAQ,QAAA,OAAO,EAAE,KAAKH,aAAtB;AACQ,QAAA,SAAS,EAAC,iCADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAE2B,KAAKC,KAAL,CAAWG,YAFtC,CALJ,CALJ,CADJ,CADJ;AAoBH;;;;EA/Ceb,KAAK,CAACgB,S;;AAiD1B,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\nimport {socket} from \"../../Websocket/Socket\"\nimport {updateBeamerState, updateChannelState} from \"../../Websocket/WsUpdaters\"\nimport \"../Pages.css\";\nimport \"./Admin.css\";\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            Title: \"Nobel IoT: Admin\",\n            BeamerState: \"Unknown\",\n            ChannelState: \"Unknown\",\n        }\n\n        // Get the current state\n        socket.emit('getBeamerState');\n        socket.emit('getChannelState');\n\n        // Functions for updating the state\n        updateBeamerState((err, BeamerState) => this.setState({BeamerState}));\n        updateChannelState((err, ChannelState) => this.setState({ChannelState}));\n    }\n\n    ToggleBeamer = (e) => {\n        socket.emit('toggleBeamer');\n    }\n\n    ToggleChannel = (e) => {\n        socket.emit('toggleChannel');\n    }\n\n    render(){\n        return(\n            <div className=\"PageBorder\">\n                <div className=\"Margin_2\">\n                    <div className=\"Admin_TitleBox\">\n                        <h1 className=\"customText_w_big\">{this.state.Title}</h1>\n                    </div>\n\n                    <div className=\"Admin_BtnBox\">\n                        <button onClick={this.ToggleBeamer} \n                                className=\"Admin_BTN dark_BTN customText_w\">\n                                Turn beamer {this.state.BeamerState}\n                        </button>\n                        <button onClick={this.ToggleChannel} \n                                className=\"Admin_BTN dark_BTN customText_w\">\n                                Change channel to {this.state.ChannelState}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}    \nexport default Admin;"]},"metadata":{},"sourceType":"module"}